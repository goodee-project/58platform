<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goodee.gdj58.platform.mapper.CustomerMapper">

	<!-- 회원 조회 -->
	<select id="selectCustomerList" 
		resultType="java.util.Map">
		
		SELECT c.customer_id customerId, c.customer_name customerName, c.customer_rank customerRank
			, ti.total_id_active totalIdActive, ti.createdate createdate
		FROM customer c
		INNER JOIN total_id ti ON c.customer_id = ti.id
		WHERE total_id_deactive_memo != "탈퇴" or total_id_deactive_memo is null
	</select>
	
	<!-- 회원 상세조회 -->
	<select id="selectCustomerOne"
		resultType="java.util.Map"
		parameterType="java.lang.String">
		
		SELECT c.customer_id customerId, c.customer_name customerName
			, c.customer_nickname customerNickname, c.customer_rank customerRank
			, c.customer_phone customerPhone, c.customer_email customerEmail
			, c.customer_pay customerPay , c.customer_point customerPoint
			, c.customer_birth customerBirth, c.customer_gender customerGender
			, ti.total_id_active totalIdActive, ti.createdate createdate
			, ci.customer_img_save_name customerImgSaveName
		FROM customer c
		INNER JOIN total_id ti ON c.customer_id = ti.id
		INNER JOIN customer_img ci ON ti.id = ci.customer_id
		WHERE c.customer_id = #{customerId}
	</select>
	
	<!-- 회원등급 수정 -->
	<select id="updateCustomerActive"
		resultType="java.util.Map"
		parameterType="java.lang.String">
				
		UPDATE total_id SET total_id_active = #{active} WHERE id = #{customerId};		
	</select>
	
	<!-- 회원 포인트 내역 조회 -->
	<select id="selectPointDetails"
		resultType="java.util.Map"
		parameterType="java.lang.String">
		
		SELECT ROW_NUMBER() OVER(ORDER BY createdate ASC) no,
			pointHistoryCategory,
			pointHistoryContent,
			point,
			createdate
		FROM (
			SELECT point_save_history_category pointHistoryCategory,
				point_save_history_content pointHistoryContent,
				point,
				createdate
			FROM point_save_history
			WHERE customer_id = #{customerId}
			UNION ALL
			SELECT point_use_history_category,
				point_use_history_content,
				point,
				createdate
			FROM point_use_history
			WHERE customer_id = #{customerId}
		) AS pointDetails
		ORDER BY No DESC
	</select>
	
	<!-- 회원 잔여 포인트 -->
	<select id="selectCustomerPoint"
		resultType="int"
		parameterType="java.lang.String">
		
		SELECT customer_point customerPoint FROM customer WHERE customer_id = #{customerId}
	</select>
	
	<!-- 회원 페이머니 내역 조회 -->
	<select id="selectPayMoneyDetails"
		resultType="java.util.Map"
		parameterType="java.lang.String">
		
		SELECT ROW_NUMBER() OVER(ORDER BY createdate ASC) no,
			payHistoryCategory,
			payHistoryContent,
			price,
			createdate
		FROM (
			SELECT pay_save_history_category payHistoryCategory,
				pay_save_history_content payHistoryContent,
				price,
				createdate
			FROM pay_save_history
			WHERE customer_id = #{customerId}
			UNION ALL
			SELECT pay_use_history_category,
				pay_use_history_content,
				price,
				createdate
			FROM pay_use_history
			WHERE customer_id = #{customerId}
		) AS payDetails
		ORDER BY No DESC
	</select>
	
	<!-- 회원 잔여 페이머니 -->
	<select id="selectCustomerPayMoney"
		resultType="int"
		parameterType="string">
		
		SELECT customer_pay customerPay FROM customer WHERE customer_id = #{customerId}
	</select>
	
	<!-- 탈퇴 회원조회 -->
	<select id="selectInactiveCustomerList" 
		resultType="java.util.Map">
		
		SELECT c.customer_id customerId, c.customer_name customerName, c.customer_rank customerRank
			, ti.total_id_active totalIdActive, ti.total_id_deactive_memo totalIdDeactiveMemo, ti.createdate createdate
		FROM customer c
		INNER JOIN total_id ti ON c.customer_id = ti.id
		WHERE total_id_deactive_memo = "탈퇴"
	</select>
</mapper>